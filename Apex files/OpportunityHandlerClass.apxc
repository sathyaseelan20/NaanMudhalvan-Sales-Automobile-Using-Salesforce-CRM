public class OpportunityHandlerClass {

    

    public static void opportunityAutomobileQuantity(List<Opportunity> LstOpportunity, Map<Id,Opportunity> OldMapOpportunity){

        set<Id> opportunityIds = new set<Id>();

        for(Opportunity opp : LstOpportunity){

            if(opp.StageName =='Closed Won' ){

                opportunityIds.add(opp.Id);

            }

        }

        Map<Id,Opportunity_Automobile__c> lstOpportunityAutomobile =new Map<Id,Opportunity_Automobile__c>([SELECT Id, Opportunity__c, Automobile__c, Quantity__c, Unit_Price__c, Total_Price__c FROM Opportunity_Automobile__c Where Opportunity__c IN: opportunityIds]);

        

        set<Id> AutoInformationIds = new set<Id>();

        for(Opportunity_Automobile__c OppAuto: lstOpportunityAutomobile.values()){

            if(OppAuto.Automobile__c != null){

                AutoInformationIds.add(OppAuto.Automobile__c);

            }

        }

        List<Automobile_Information__c> lstAutomobileInfomation = new List<Automobile_Information__c>();

        Map<Id,Automobile_Information__c> MapAutomobileInformation = New Map<Id,Automobile_Information__c>([SELECT Quantity__c, Price__c, Name, Id FROM Automobile_Information__c WHERE Id IN: AutoInformationIds]);

        For(Opportunity_Automobile__c AutoOpp : lstOpportunityAutomobile.Values()){

            decimal num = 0;

            if(AutoOpp.Automobile__c == MapAutomobileInformation.get(AutoOpp.Automobile__c).Id && OldMapOpportunity.get(AutoOpp.Opportunity__c).stagename != 'Closed Won'){

                

                num = MapAutomobileInformation.get(AutoOpp.Automobile__c).Quantity__c- AutoOpp.Quantity__c;

                MapAutomobileInformation.get(AutoOpp.Automobile__c).quantity__c = num;

                lstAutomobileInfomation.add(MapAutomobileInformation.get(AutoOpp.Automobile__c));

            }

        }

        If(!lstAutomobileInfomation.IsEmpty()){

            update lstAutomobileInfomation;

        }

        

        

    }

}
